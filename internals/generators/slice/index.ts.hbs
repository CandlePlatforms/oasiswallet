import { PayloadAction } from '@reduxjs/toolkit';
import { createSlice } from 'utils/@reduxjs/toolkit';
{{#if wantSaga}}
import { {{ camelCase sliceName }}Saga } from './saga';
{{/if}}
import { {{ properCase sliceName }}State } from './types';

export const initialState: {{ properCase sliceName }}State = {};

const slice = createSlice({
  name: '{{ camelCase sliceName }}',
  initialState,
  reducers: {
    someAction(state, action: PayloadAction<any>) {},
  },
});

export const { actions: {{ camelCase sliceName }}Actions } = slice;

export default slice.reducer;

/**
 * Example Usage:
 *
  * combineReducers({
 *   ...
 *   {{ camelCase sliceName }}: {{ camelCase sliceName }}Reducer,
 * })
 * rootSagas() {
 *   yield all([
 *     ...
 *     {{ camelCase sliceName }}Saga
 *   ])
 * }
 *
 * export function MyComponentNeedingThisSlice() {
 *  const actions = {{ camelCase sliceName }}Actions;
 *
 *  const onButtonClick = (evt) => {
 *    dispatch(actions.someAction());
 *   };
 * }
 */
